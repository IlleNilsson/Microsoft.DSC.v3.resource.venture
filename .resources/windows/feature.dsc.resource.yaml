# feature.dsc.resource.yaml
$schema:  https://aka.ms/dsc/schemas/v3/bundled/resource/manifest.vscode.json
version: 0.1.0
type: Visity.DSC.Windows/Feature
kind: resource
description: Windows OS Edition agnostic feature handling (WindowsFeature for Server & WindowsOptionalFeature for Clients)
tags:
  - os
  - windows
  - client
  - server
  - agnostic
  - feature
  - optional

get:
  executable: pwsh
  args:
    - -NoLogo
    - -NonInteractive
    - -NoProfile
    - -NoProfileLoadTime
    - -CommandWithArgs
    - |
      $computerType = (Get-CimInstance -ClassName Win32_OperatingSystem).ProductType
      $feature = $null
      switch ($computerType) {
          1       { $feature = Get-WindowsOptionalFeature -Online -FeatureName $name }
          default { $feature = Get-WindowsFeature -Name $name }  
      }

      if (!$feature) { 
          throw New-Object ArgumentException "Feature '$name' not found"
      }

      return $feature | ConvertTo-Yaml
  input: stdin
  return: state

test:
  executable: pwsh
  args:
    - -NoLogo
    - -NonInteractive
    - -NoProfile
    - -NoProfileLoadTime
    - -CommandWithArgs
    - |
      $vars = Get-Variable

      $vars

      return $vars | ConvertTo-Json
  input: stdin
  return: state

set:
  executable: pwsh
  args:
    - -NoLogo
    - -NonInteractive
    - -NoProfile
    - -NoProfileLoadTime
    - -CommandWithArgs
    - |
      $vars = Get-Variable

      $vars

      return $vars | ConvertTo-Json
  implementsPretest: true
  input: stdin
  return: state

exitCodes:
  0: Success
  1: Failure
